#include <stdio.h>

#include <glad/glad.h>
#include <GLFW/glfw3.h>

void KeyCallback(GLFWwindow* window, int key, int scancode, int action, int mods)
{
    if (glfwGetKey(window, GLFW_KEY_ESCAPE) == GLFW_PRESS) {
	glfwSetWindowShouldClose(window, true);
    }
}

void ErrorCallback(int error, const char* description)
{
    fprintf(stderr, "Error (%d): %s\n", error, description);
}

int main()
{
    glfwInit();
    glfwWindowHint(GLFW_OPENGL_PROFILE, GLFW_OPENGL_CORE_PROFILE);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR, 4);
    glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR, 6);
    GLFWwindow* window = glfwCreateWindow(720, 480, "TIMGE", nullptr, nullptr);
    
    if (!window) {
	fprintf(stderr, "Error: Could not create window\n");
	return 1;
    }

    glfwSetKeyCallback(window, KeyCallback);
    glfwSetErrorCallback(ErrorCallback);

    glfwMakeContextCurrent(window);
    if (!gladLoadGL()) {
	fprintf(stderr, "Error: Could not load OpenGL\n");
	return 1;
    }
    glfwSwapInterval(1);

    while(!glfwWindowShouldClose(window)) {
	glClear(GL_COLOR_BUFFER_BIT);
	glClearColor(1.0f, 0.7f, 0.7f, 1.0f);
	
	glfwSwapBuffers(window);
	glfwPollEvents();
    }
}
